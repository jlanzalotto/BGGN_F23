---
title: "Class09"
format: pdf
---
```{r}
fna.data <- "WisconsinCancer.csv"
wisc.df <- read.csv(fna.data, row.names=1)
wisc.data <- wisc.df[,-1]
diagnosis <- factor(wisc.df$diagnosis) 
diagnosis
```

Q1. How many observations are in this dataset?

```{r}
nrow(wisc.data)

```

Q2. How many of the observations have a malignant diagnosis?
```{r}
table(diagnosis)
sum(wisc.data$diagnosis=="M")

```
Q3. How many variables/features in the data are suffixed with _mean?
```{r}
grep("_mean", colnames(wisc.data))
```


```{r}
# Check column means and standard deviations
colMeans(wisc.data)

apply(wisc.data,2,sd)

wisc.pr <- prcomp(wisc.data,scale=TRUE)
summary(wisc.pr)
```
Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?
.4427

Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?
3-! PC1,2 and 3

Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?
7!

Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

```{r}
biplot(wisc.pr)
```
I can't see the points because of all the text labels!
```{r}
# Scatter plot observations by components 1 and 2
plot(wisc.pr$x[,1], wisc.pr$x[,2], col = diagnosis)

```
Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?
```{r}
# Repeat for components 1 and 3
plot(wisc.pr$x[,1], wisc.pr$x[,3], col = diagnosis, xlab = "PC1", ylab = "PC3")

```
```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()

```

```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)

#which(pcvar>= .9)

# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)
pve
# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")

```
```{r}
## ggplot based graph
#install.packages("factoextra")
library(factoextra)
fviz_eig(wisc.pr, addlabels = TRUE)

```
Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean? This tells us how much this original feature contributes to the first PC.
```{r}
wisc.pr$rotation[,1]

```
Negative value of concave points negatively contributes to PC1 on the left of the x-axis


#### Section 3
```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <-scale(wisc.data)
data.dist <- dist(data.scaled)
wisc.hclust <- hclust(data.dist, method="complete")

```
Q10. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?
```{r}
plot(wisc.hclust)
abline(h=19, col="red", lty=2)
```
19
```{r}
wisc.hclust.clusters <- cutree(wisc.hclust,h=19)
table(wisc.hclust.clusters, diagnosis)

```
Q11. OPTIONAL: Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10? How do you judge the quality of your result in each case?
```{r}
wisc.hclust.clusters <- cutree(wisc.hclust,h=18)
table(wisc.hclust.clusters, diagnosis)

```
I think the way we did the clustering is best

Q12. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.
```{r}
wisc.hclust <- hclust(data.dist, method="ward.D2")
plot(wisc.hclust)
wisc.hclust.clusters <- cutree(wisc.hclust,h=55)
table(wisc.hclust.clusters, diagnosis)
```
ward.D2 looks the best as far as clustering benign and malignant cases in different clusters


```{r}
grps <- cutree(wisc.hclust, k=2)
table(grps)
table(grps, diagnosis)
plot(wisc.pr$x[,1:2], col=grps)
plot(wisc.pr$x[,1:2], col=diagnosis)
##turn our groups into a factor and reorder the levels so cluster 2 comes first and thus gets the first color (black) and cluster 1 gets the second color (red).
g <- as.factor(grps)
g <- relevel(g,2)
plot(wisc.pr$x[,1:2], col=g)
#install.packages("rgl")
library(rgl)
plot3d(wisc.pr$x[,1:3], xlab="PC 1", ylab="PC 2", zlab="PC 3", cex=1.5, size=1, type="s", col=grps)

```
```{r}
## Use the distance along the first 7 PCs for clustering i.e. wisc.pr$x[, 1:7]
dist <-dist(wisc.pr$x[, 1:7])
wisc.pr.hclust <- hclust(dist, method="ward.D2")
wisc.pr.hclust.clusters2 <- cutree(wisc.pr.hclust, k=2)
wisc.pr.hclust.clusters4 <- cutree(wisc.pr.hclust, k=4)

```

Q13. How well does the newly created model with four clusters separate out the two diagnoses?

```{r}
# Compare to actual diagnoses
table(wisc.pr.hclust.clusters2, diagnosis)
table(wisc.pr.hclust.clusters4, diagnosis)

```
2 clusters looks better
Q14. How well do the hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.
```{r}
table(wisc.pr.hclust.clusters2, diagnosis)

table(wisc.hclust.clusters , diagnosis) 
 # 90% success with the 2 clusters- best one i think
```
Q16. Which of these new patients should we prioritize for follow up based on your results?
```{r}
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc

```
```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```
lets prioritize patient 2